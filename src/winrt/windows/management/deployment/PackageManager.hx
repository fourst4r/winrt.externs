package winrt.windows.management.deployment;

@:valueType
@:include("winrt/Windows.Management.Deployment.h", true)
@:native("winrt::Windows::Management::Deployment::PackageManager")
extern class PackageManager
    implements winrt.windows.management.deployment.IPackageManager
    implements winrt.windows.management.deployment.IPackageManager2
    implements winrt.windows.management.deployment.IPackageManager3
    implements winrt.windows.management.deployment.IPackageManager4
    implements winrt.windows.management.deployment.IPackageManager5
    implements winrt.windows.management.deployment.IPackageManager6
    implements winrt.windows.management.deployment.IPackageManager7
    implements winrt.windows.management.deployment.IPackageManager8
    implements winrt.windows.management.deployment.IPackageManager9
    implements winrt.windows.management.deployment.IPackageManager10
{
    function new();
    overload function AddPackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function UpdatePackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function RemovePackageAsync(packageFullName: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function StagePackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function RegisterPackageAsync(manifestUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function FindPackages(): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesForUser(userSecurityId: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackages(packageName: cxx.ConstRef<winrt.HString>, packagePublisher: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesForUser(userSecurityId: cxx.ConstRef<winrt.HString>, packageName: cxx.ConstRef<winrt.HString>, packagePublisher: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    function FindUsers(packageFullName: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.collections.IIterable<winrt.windows.management.deployment.PackageUserInformation> /* GenericTypeInstSig */;
    function SetPackageState(packageFullName: cxx.ConstRef<winrt.HString>, packageState: cxx.ConstRef<winrt.windows.management.deployment.PackageState>): Void;
    function FindPackage(packageFullName: cxx.ConstRef<winrt.HString>): winrt.windows.applicationmodel.Package;
    function CleanupPackageForUserAsync(packageName: cxx.ConstRef<winrt.HString>, userSecurityId: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function FindPackages(packageFamilyName: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesForUser(userSecurityId: cxx.ConstRef<winrt.HString>, packageFamilyName: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    function FindPackageForUser(userSecurityId: cxx.ConstRef<winrt.HString>, packageFullName: cxx.ConstRef<winrt.HString>): winrt.windows.applicationmodel.Package;
    overload function RemovePackageAsync(packageFullName: cxx.ConstRef<winrt.HString>, removalOptions: cxx.ConstRef<winrt.windows.management.deployment.RemovalOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function StagePackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function RegisterPackageByFullNameAsync(mainPackageFullName: cxx.ConstRef<winrt.HString>, dependencyPackageFullNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function FindPackagesWithPackageTypes(packageTypes: cxx.ConstRef<winrt.windows.management.deployment.PackageTypes>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesForUserWithPackageTypes(userSecurityId: cxx.ConstRef<winrt.HString>, packageTypes: cxx.ConstRef<winrt.windows.management.deployment.PackageTypes>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesWithPackageTypes(packageName: cxx.ConstRef<winrt.HString>, packagePublisher: cxx.ConstRef<winrt.HString>, packageTypes: cxx.ConstRef<winrt.windows.management.deployment.PackageTypes>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesForUserWithPackageTypes(userSecurityId: cxx.ConstRef<winrt.HString>, packageName: cxx.ConstRef<winrt.HString>, packagePublisher: cxx.ConstRef<winrt.HString>, packageTypes: cxx.ConstRef<winrt.windows.management.deployment.PackageTypes>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesWithPackageTypes(packageFamilyName: cxx.ConstRef<winrt.HString>, packageTypes: cxx.ConstRef<winrt.windows.management.deployment.PackageTypes>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function FindPackagesForUserWithPackageTypes(userSecurityId: cxx.ConstRef<winrt.HString>, packageFamilyName: cxx.ConstRef<winrt.HString>, packageTypes: cxx.ConstRef<winrt.windows.management.deployment.PackageTypes>): winrt.windows.foundation.collections.IIterable<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    overload function StageUserDataAsync(packageFullName: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function AddPackageVolumeAsync(packageStorePath: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncOperation<winrt.windows.management.deployment.PackageVolume> /* GenericTypeInstSig */;
    overload function AddPackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function ClearPackageStatus(packageFullName: cxx.ConstRef<winrt.HString>, status: cxx.ConstRef<winrt.windows.management.deployment.PackageStatus>): Void;
    overload function RegisterPackageAsync(manifestUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, appDataVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function FindPackageVolume(volumeName: cxx.ConstRef<winrt.HString>): winrt.windows.management.deployment.PackageVolume;
    function FindPackageVolumes(): winrt.windows.foundation.collections.IIterable<winrt.windows.management.deployment.PackageVolume> /* GenericTypeInstSig */;
    function GetDefaultPackageVolume(): winrt.windows.management.deployment.PackageVolume;
    function MovePackageToVolumeAsync(packageFullName: cxx.ConstRef<winrt.HString>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function RemovePackageVolumeAsync(volume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function SetDefaultPackageVolume(volume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): Void;
    function SetPackageStatus(packageFullName: cxx.ConstRef<winrt.HString>, status: cxx.ConstRef<winrt.windows.management.deployment.PackageStatus>): Void;
    function SetPackageVolumeOfflineAsync(packageVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function SetPackageVolumeOnlineAsync(packageVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function StagePackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function StageUserDataAsync(packageFullName: cxx.ConstRef<winrt.HString>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function GetPackageVolumesAsync(): winrt.windows.foundation.IAsyncOperation<winrt.windows.foundation.collections.IVectorView<winrt.windows.management.deployment.PackageVolume> /* GenericTypeInstSig */> /* GenericTypeInstSig */;
    overload function AddPackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>, optionalPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, externalPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function StagePackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>, optionalPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, externalPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function RegisterPackageByFamilyNameAsync(mainPackageFamilyName: cxx.ConstRef<winrt.HString>, dependencyPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, appDataVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>, optionalPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function DebugSettings(): winrt.windows.management.deployment.PackageManagerDebugSettings;
    overload function ProvisionPackageForAllUsersAsync(packageFamilyName: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function AddPackageByAppInstallerFileAsync(appInstallerFileUri: cxx.ConstRef<winrt.windows.foundation.Uri>, options: cxx.ConstRef<winrt.windows.management.deployment.AddPackageByAppInstallerOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function RequestAddPackageByAppInstallerFileAsync(appInstallerFileUri: cxx.ConstRef<winrt.windows.foundation.Uri>, options: cxx.ConstRef<winrt.windows.management.deployment.AddPackageByAppInstallerOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function AddPackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, options: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>, optionalPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, packageUrisToInstall: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, relatedPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function StagePackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, options: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>, optionalPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, packageUrisToInstall: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, relatedPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function RequestAddPackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>, optionalPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, relatedPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    overload function RequestAddPackageAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, dependencyPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, deploymentOptions: cxx.ConstRef<winrt.windows.management.deployment.DeploymentOptions>, targetVolume: cxx.ConstRef<winrt.windows.management.deployment.PackageVolume>, optionalPackageFamilyNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, relatedPackageUris: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>, packageUrisToInstall: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.windows.foundation.Uri> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function DeprovisionPackageForAllUsersAsync(packageFamilyName: cxx.ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function FindProvisionedPackages(): winrt.windows.foundation.collections.IVector<winrt.windows.applicationmodel.Package> /* GenericTypeInstSig */;
    function AddPackageByUriAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, options: cxx.ConstRef<winrt.windows.management.deployment.AddPackageOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function StagePackageByUriAsync(packageUri: cxx.ConstRef<winrt.windows.foundation.Uri>, options: cxx.ConstRef<winrt.windows.management.deployment.StagePackageOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function RegisterPackageByUriAsync(manifestUri: cxx.ConstRef<winrt.windows.foundation.Uri>, options: cxx.ConstRef<winrt.windows.management.deployment.RegisterPackageOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function RegisterPackagesByFullNameAsync(packageFullNames: cxx.ConstRef<winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>, options: cxx.ConstRef<winrt.windows.management.deployment.RegisterPackageOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
    function SetPackageStubPreference(packageFamilyName: cxx.ConstRef<winrt.HString>, useStub: cxx.ConstRef<winrt.windows.management.deployment.PackageStubPreference>): Void;
    function GetPackageStubPreference(packageFamilyName: cxx.ConstRef<winrt.HString>): winrt.windows.management.deployment.PackageStubPreference;
    overload function ProvisionPackageForAllUsersAsync(mainPackageFamilyName: cxx.ConstRef<winrt.HString>, options: cxx.ConstRef<winrt.windows.management.deployment.PackageAllUserProvisioningOptions>): winrt.windows.foundation.IAsyncOperationWithProgress<winrt.windows.management.deployment.DeploymentResult, winrt.windows.management.deployment.DeploymentProgress> /* GenericTypeInstSig */;
}
