package winrt.windows.foundation.diagnostics;

@:valueType
@:unreflective
@:structAccess
@:semantics(variable)
@:include("winrt/Windows.Foundation.Diagnostics.h", true)
@:native("winrt::Windows::Foundation::Diagnostics::ILoggingFields")
extern interface ILoggingFields extends winrt.windows.foundation.IInspectable
{
    function Clear(): Void;
    overload function BeginStruct(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>): Void;
    overload function BeginStruct(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    function EndStruct(): Void;
    overload function AddEmpty(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>): Void;
    overload function AddEmpty(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddEmpty(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt8(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt8): Void;
    overload function AddUInt8(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt8, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt8(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt8, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt8Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt8>): Void;
    overload function AddUInt8Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt8>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt8Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt8>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddInt16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int16): Void;
    overload function AddInt16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int16, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddInt16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int16, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddInt16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int16>): Void;
    overload function AddInt16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int16>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddInt16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int16>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt16): Void;
    overload function AddUInt16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt16, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt16, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt16>): Void;
    overload function AddUInt16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt16>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt16>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddInt32(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddInt32(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int32, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddInt32(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int32, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddInt32Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int32>): Void;
    overload function AddInt32Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int32>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddInt32Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int32>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt32(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt32): Void;
    overload function AddUInt32(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt32, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt32(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt32, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt32Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt32>): Void;
    overload function AddUInt32Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt32>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt32Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt32>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddInt64(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int64): Void;
    overload function AddInt64(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int64, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddInt64(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Int64, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddInt64Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int64>): Void;
    overload function AddInt64Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int64>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddInt64Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Int64>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt64(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt64): Void;
    overload function AddUInt64(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt64, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt64(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end UInt64, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddUInt64Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt64>): Void;
    overload function AddUInt64Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt64>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddUInt64Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end UInt64>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddSingle(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Float32): Void;
    overload function AddSingle(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Float32, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddSingle(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Float32, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddSingleArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Float32>): Void;
    overload function AddSingleArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Float32>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddSingleArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Float32>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddDouble(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Float64): Void;
    overload function AddDouble(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Float64, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddDouble(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.num. #else cpp. #end Float64, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddDoubleArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Float64>): Void;
    overload function AddDoubleArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Float64>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddDoubleArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx.num. #else cpp. #end Float64>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddChar16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx. #else cpp. #end Char): Void;
    overload function AddChar16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx. #else cpp. #end Char, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddChar16(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx. #else cpp. #end Char, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddChar16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx. #else cpp. #end Char>): Void;
    overload function AddChar16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx. #else cpp. #end Char>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddChar16Array(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<#if reflaxe.cpp cxx. #else cpp. #end Char>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddBoolean(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: Bool): Void;
    overload function AddBoolean(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: Bool, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddBoolean(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: Bool, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddBooleanArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<Bool>): Void;
    overload function AddBooleanArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<Bool>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddBooleanArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<Bool>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddString(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>): Void;
    overload function AddString(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddString(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddStringArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.HString>): Void;
    overload function AddStringArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.HString>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddStringArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.HString>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddGuid(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.Guid>): Void;
    overload function AddGuid(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.Guid>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddGuid(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.Guid>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddGuidArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.Guid>): Void;
    overload function AddGuidArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.Guid>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddGuidArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.Guid>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddDateTime(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.DateTime>): Void;
    overload function AddDateTime(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.DateTime>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddDateTime(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.DateTime>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddDateTimeArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.DateTime>): Void;
    overload function AddDateTimeArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.DateTime>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddDateTimeArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.DateTime>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddTimeSpan(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.TimeSpan>): Void;
    overload function AddTimeSpan(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.TimeSpan>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddTimeSpan(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.TimeSpan>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddTimeSpanArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.TimeSpan>): Void;
    overload function AddTimeSpanArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.TimeSpan>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddTimeSpanArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.TimeSpan>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddPoint(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Point>): Void;
    overload function AddPoint(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Point>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddPoint(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Point>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddPointArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Point>): Void;
    overload function AddPointArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Point>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddPointArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Point>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddSize(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Size>): Void;
    overload function AddSize(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Size>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddSize(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Size>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddSizeArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Size>): Void;
    overload function AddSizeArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Size>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddSizeArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Size>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddRect(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Rect>): Void;
    overload function AddRect(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Rect>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddRect(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.Rect>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
    overload function AddRectArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Rect>): Void;
    overload function AddRectArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Rect>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>): Void;
    overload function AddRectArray(name: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, value: winrt.ArrayView<winrt.windows.foundation.Rect>, format: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.diagnostics.LoggingFieldFormat>, tags: #if reflaxe.cpp cxx.num. #else cpp. #end Int32): Void;
}
