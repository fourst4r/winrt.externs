package winrt.windows.security.authentication.identity.provider;

@:valueType
@:unreflective
@:structAccess
@:semantics(variable)
@:include("winrt/Windows.Security.Authentication.Identity.Provider.h", true)
@:native("winrt::Windows::Security::Authentication::Identity::Provider::SecondaryAuthenticationFactorRegistration")
extern class SecondaryAuthenticationFactorRegistration
    implements winrt.windows.security.authentication.identity.provider.ISecondaryAuthenticationFactorRegistration
{
    function FinishRegisteringDeviceAsync(deviceConfigurationData: ConstRef<winrt.windows.storage.streams.IBuffer>): winrt.windows.foundation.IAsyncAction;
    function AbortRegisteringDeviceAsync(errorLogMessage: ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncAction;
    overload function RegisterDevicePresenceMonitoringAsync(deviceId: ConstRef<winrt.HString>, deviceInstancePath: ConstRef<winrt.HString>, monitoringMode: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringMode>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatus> /* GenericTypeInstSig */;
    overload function RegisterDevicePresenceMonitoringAsync(deviceId: ConstRef<winrt.HString>, deviceInstancePath: ConstRef<winrt.HString>, monitoringMode: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringMode>, deviceFriendlyName: ConstRef<winrt.HString>, deviceModelNumber: ConstRef<winrt.HString>, deviceConfigurationData: ConstRef<winrt.windows.storage.streams.IBuffer>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatus> /* GenericTypeInstSig */;
    function UnregisterDevicePresenceMonitoringAsync(deviceId: ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncAction;
    function IsDevicePresenceMonitoringSupported(): Bool;
    function RequestStartRegisteringDeviceAsync(deviceId: ConstRef<winrt.HString>, capabilities: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDeviceCapabilities>, deviceFriendlyName: ConstRef<winrt.HString>, deviceModelNumber: ConstRef<winrt.HString>, deviceKey: ConstRef<winrt.windows.storage.streams.IBuffer>, mutualAuthenticationKey: ConstRef<winrt.windows.storage.streams.IBuffer>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorRegistrationResult> /* GenericTypeInstSig */;
    function FindAllRegisteredDeviceInfoAsync(queryType: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDeviceFindScope>): winrt.windows.foundation.IAsyncOperation<winrt.windows.foundation.collections.IVectorView<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorInfo> /* GenericTypeInstSig */> /* GenericTypeInstSig */;
    function UnregisterDeviceAsync(deviceId: ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncAction;
    function UpdateDeviceConfigurationDataAsync(deviceId: ConstRef<winrt.HString>, deviceConfigurationData: ConstRef<winrt.windows.storage.streams.IBuffer>): winrt.windows.foundation.IAsyncAction;
    static overload function RegisterDevicePresenceMonitoringAsync(deviceId: ConstRef<winrt.HString>, deviceInstancePath: ConstRef<winrt.HString>, monitoringMode: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringMode>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatus> /* GenericTypeInstSig */;
    static overload function RegisterDevicePresenceMonitoringAsync(deviceId: ConstRef<winrt.HString>, deviceInstancePath: ConstRef<winrt.HString>, monitoringMode: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringMode>, deviceFriendlyName: ConstRef<winrt.HString>, deviceModelNumber: ConstRef<winrt.HString>, deviceConfigurationData: ConstRef<winrt.windows.storage.streams.IBuffer>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDevicePresenceMonitoringRegistrationStatus> /* GenericTypeInstSig */;
    static function UnregisterDevicePresenceMonitoringAsync(deviceId: ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncAction;
    static function IsDevicePresenceMonitoringSupported(): Bool;
    static function RequestStartRegisteringDeviceAsync(deviceId: ConstRef<winrt.HString>, capabilities: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDeviceCapabilities>, deviceFriendlyName: ConstRef<winrt.HString>, deviceModelNumber: ConstRef<winrt.HString>, deviceKey: ConstRef<winrt.windows.storage.streams.IBuffer>, mutualAuthenticationKey: ConstRef<winrt.windows.storage.streams.IBuffer>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorRegistrationResult> /* GenericTypeInstSig */;
    static function FindAllRegisteredDeviceInfoAsync(queryType: ConstRef<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorDeviceFindScope>): winrt.windows.foundation.IAsyncOperation<winrt.windows.foundation.collections.IVectorView<winrt.windows.security.authentication.identity.provider.SecondaryAuthenticationFactorInfo> /* GenericTypeInstSig */> /* GenericTypeInstSig */;
    static function UnregisterDeviceAsync(deviceId: ConstRef<winrt.HString>): winrt.windows.foundation.IAsyncAction;
    static function UpdateDeviceConfigurationDataAsync(deviceId: ConstRef<winrt.HString>, deviceConfigurationData: ConstRef<winrt.windows.storage.streams.IBuffer>): winrt.windows.foundation.IAsyncAction;
}
