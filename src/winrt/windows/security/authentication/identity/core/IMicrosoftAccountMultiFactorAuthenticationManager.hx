package winrt.windows.security.authentication.identity.core;

@:valueType
@:unreflective
@:structAccess
@:semantics(variable)
@:include("winrt/Windows.Security.Authentication.Identity.Core.h", true)
@:native("winrt::Windows::Security::Authentication::Identity::Core::IMicrosoftAccountMultiFactorAuthenticationManager")
extern interface IMicrosoftAccountMultiFactorAuthenticationManager extends winrt.windows.foundation.IInspectable
{
    function GetOneTimePassCodeAsync(userAccountId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, codeLength: #if reflaxe.cpp cxx.num. #else cpp. #end UInt32): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorOneTimeCodedInfo> /* GenericTypeInstSig */;
    function AddDeviceAsync(userAccountId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, authenticationToken: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, wnsChannelId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorServiceResponse> /* GenericTypeInstSig */;
    function RemoveDeviceAsync(userAccountId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorServiceResponse> /* GenericTypeInstSig */;
    function UpdateWnsChannelAsync(userAccountId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, channelUri: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorServiceResponse> /* GenericTypeInstSig */;
    function GetSessionsAsync(userAccountIdList: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorGetSessionsResult> /* GenericTypeInstSig */;
    function GetSessionsAndUnregisteredAccountsAsync(userAccountIdList: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.foundation.collections.IIterable<winrt.HString> /* temp_GenericTypeInstSig */>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorUnregisteredAccountsAndSessionInfo> /* GenericTypeInstSig */;
    overload function ApproveSessionAsync(sessionAuthentictionStatus: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorSessionAuthenticationStatus>, authenticationSessionInfo: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorSessionInfo>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorServiceResponse> /* GenericTypeInstSig */;
    overload function ApproveSessionAsync(sessionAuthentictionStatus: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorSessionAuthenticationStatus>, userAccountId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, sessionId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, sessionAuthenticationType: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorAuthenticationType>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorServiceResponse> /* GenericTypeInstSig */;
    overload function DenySessionAsync(authenticationSessionInfo: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorSessionInfo>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorServiceResponse> /* GenericTypeInstSig */;
    overload function DenySessionAsync(userAccountId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, sessionId: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.HString>, sessionAuthenticationType: #if reflaxe.cpp cxx.ConstRef #else cpp.Reference #end <winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorAuthenticationType>): winrt.windows.foundation.IAsyncOperation<winrt.windows.security.authentication.identity.core.MicrosoftAccountMultiFactorServiceResponse> /* GenericTypeInstSig */;
}
